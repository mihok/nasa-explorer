@{
    ViewBag.Title = "Explore";
    Layout = "~/Views/Shared/_Skeleton.cshtml";
}

@section Head {
    <style type="text/css">
        body { padding-top: 60px; }
        canvas { height: 480px; width: 640px; background: black; }
    </style>
}

@section Javascript {
    <script type="text/javascript" src="@Url.Content("~/Scripts/three.min.js")"></script>
    <script type="text/javascript">
        (function () {
            var width = 640,
                height = 480,
                angle = 45,
                aspect = width / height,
                near = 0.1,
                far = 50,
                canvas = $('#explore'),
                renderer = undefined,
                camera = undefined,
                scene = undefined,
                resize = function resize() {
                    if (canvas) {
                        //update dimension vars
                        //width = window.clientWidth;
                        //height = window.clientHeight;

                        //canvas.width(width);
                        //canvas.height(height);
                    }
                },
                renderPlanets = function renderPlanets(sc,rndr) {
                    for (var i = 0; i <= 8; i++) {
                        $.ajax({
                            url: '/api/coords/' + (199 + (100 * i)),
                            dataType: 'json',
                            success: function (data) {
                                if (data) {
                                    var radius = 5,
                                        segments = 16,
                                        rings = 16;
                                    var sphereMaterial = new THREE.MeshNormalMaterial({ color: 0xCC0000 });
                                    var planet = new THREE.Mesh(
                                          new THREE.SphereGeometry(
                                            radius,
                                            segments,
                                            rings),
                                      sphereMaterial);

                                    planet.position.x = data[0].X;
                                    planet.position.y = data[0].Y;
                                    planet.position.z = data[0].Z;

                                    sc.add(planet);

                                    // not the proper way but render after each add
                                    rndr.render(scene, camera);
                                }
                            }
                        });
                    };
                };

            $(document).ready(function () {
                // setup resizing of the canvas
                $(window).bind('resize', resize);

                if (typeof renderer === "undefined") {
                    renderer = new THREE.WebGLRenderer();
                }

                if (typeof camera === "undefined") {
                    camera = new THREE.PerspectiveCamera(
                        angle,
                        aspect,
                        near,
                        far
                    );
                }

                if (typeof scene === "undefined") {
                    scene = new THREE.Scene();
                }

                scene.add(camera);
                camera.position.z = -5; // move camera back from 0,0,0
                renderer.setSize(width, height);
                canvas.append(renderer.domElement);

                var radius = 50,
                    segments = 16,
                    rings = 16,
                    sphereMaterial = new THREE.MeshLambertMaterial({ color: 0xCC0000 }),
                    planet = new THREE.Mesh(new THREE.SphereGeometry(radius,segments,rings), sphereMaterial);

                planet.position.x = 1;
                planet.position.y = 1;
                planet.position.z = 1;

                scene.add(planet);

                var ambientLight = new THREE.AmbientLight(0xFFFFFF);

                // set its position
                ambientLight.position.x = 0;
                ambientLight.position.y = 0;
                ambientLight.position.z = 50;

                // add to the scene
                scene.add(ambientLight);

                //renderPlanets(scene, renderer);
                renderer.render(scene, camera);
            });
        })();
    </script>
}
<div id="explore"></div>